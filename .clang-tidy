Checks: >
  bugprone-*,
  cert-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-*,
  hicpp-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*

# System header handling - prevent parsing errors
HeaderFilterRegex: '^(src|include)/'
SystemHeaders: false
UseColor: true
FormatStyle: file

CheckOptions:
  # ---------- Naming convention (consistency > personal taste) ----------
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.VariableCase
    value: camelBack
  - key: readability-identifier-naming.ParameterCase
    value: camelBack
  - key: readability-identifier-naming.MemberCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: m_
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.MacroCase
    value: UPPER_CASE

  # ---------- Modernization (force C++20 idioms) ----------
  - key: modernize-use-nullptr.NullMacros
    value: 'NULL'
  - key: modernize-loop-convert.MaxCopySize
    value: 16
  - key: modernize-loop-convert.MinConfidence
    value: reasonable
  - key: modernize-pass-by-value.IncludeStyle
    value: llvm

  # ---------- Bugprone settings (HFT: every crash = $$$) ----------
  - key: bugprone-string-constructor.WarnOnLargeLength
    value: true
  # - key: bugprone-string-constructor.LargeLengthThreshold
  #   value: 8388608
  - key: bugprone-assert-side-effect.AssertMacros
    value: assert,NSAssert,NSCAssert

  # ---------- Core guidelines tuning ----------
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: false   # enforce move, copies are dangerous in HFT

  # ---------- Performance strictness ----------
  - key: performance-for-range-copy.WarnOnAllAutoCopies
    value: true
  - key: performance-unnecessary-value-param.AllowedTypes
    value: ''

  # ---------- HICPP complexity thresholds (discipline) ----------
  - key: hicpp-function-size.LineThreshold
    value: 80
  - key: hicpp-function-size.StatementThreshold
    value: 400
  - key: hicpp-function-size.BranchThreshold
    value: 20
